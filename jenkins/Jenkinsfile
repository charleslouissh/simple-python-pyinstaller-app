pipeline {
    agent none 
    /* 
    Aucun agent global ne sera alloué pour toute l'exécution du Pipeline.
    Chaque étape doit spécifier sa propre section agent.
    */

    stages {
        stage('Construction') { // Définit une étape appelée Construction qui apparaît sur l'interface utilisateur de Jenkins.
            agent {
                docker {
                    image 'python:2-alpine' 
                    /*
                    Télécharge l'image Docker python:2-alpine (si elle n'est pas déjà disponible sur votre machine) 
                    et exécute cette image comme un conteneur séparé. 
                    
                    Cela se traduit par :
                    Vous aurez des conteneurs Jenkins et Python séparés s'exécutant localement dans Docker.
                    Le conteneur Python devient l'agent que Jenkins utilise pour exécuter l'étape de construction 
                    de votre projet Pipeline. Cependant, ce conteneur est de courte durée - sa durée de vie est 
                    seulement celle de l'exécution de votre étape de construction.
                    */
                }
            }
            steps {
                sh 'python -m py_compile sources/add2vals.py sources/calc.py' 
                /*
                Cette étape sh exécute la commande Python pour compiler votre application et sa bibliothèque calc en 
                fichiers binaires (chacun avec l'extension .pyc), qui sont placés dans le répertoire workspace 
                sources (dans le répertoire /var/jenkins_home/workspace/simple-python-pyinstaller-app dans le conteneur Jenkins).
                */

                stash(name: 'compiled-results', includes: 'sources/*.py*') 
                /*
                Cette étape enregistre le code source Python et les fichiers de code d'octet compilés 
                (avec l'extension .pyc) du répertoire de l'espace de travail des sources pour les utiliser 
                dans des étapes ultérieures.
                */
            }
        }
    }
}